# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.2
  heroku: circleci/heroku@1.2.6
  cypress: cypress-io/cypress@1

executors:
  go_and_postgres:
    docker:
      - image: cimg/go:1.17.1
        environment:
          POSTGRES_DB: test_snippetbox
      - image: circleci/postgres:13.4
        environment:
          POSTGRES_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
          POSTGRES_DB: test_snippetbox
          POSTGRES_USER: user
          POSTGRES_PASSWORD: $PG_PW

commands:
  compile_application:
    description: Build Application Containers
    steps:
      - run:
          name: Build Docker-Compose
          command: |
            docker-compose build
  start_application:
    description: Start Application Containers
    steps:
      - run:
          name: Start Application
          command: |
            docker-compose up -d
jobs:
  go-lint:
    docker:
      - image: golangci/golangci-lint:v1.42
    steps:
      - checkout
      - run:
          name: Lint Go Code
          command: |
            golangci-lint run -D errcheck
  docker-lint:
    docker:
      - image: hadolint/hadolint:2.7.0-alpine
    steps:
      - checkout
      - run:
          name: Lint Dockerfiles
          command: |
            hadolint ./Dockerfile
            hadolint ./db/Dockerfile
  test:
    executor: go_and_postgres
    environment:
      TEST_RESULTS: /tmp/test-results
    working_directory: ~/project
    parallelism: 2
    steps:
      - checkout
      - run: 
          name: Create Test Results Directory
          command: |
            mkdir -p $TEST_RESULTS
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
            - go-mod-v1-{{ checksum "go.mod" }}-
            - go-mod-v1-
      - run:
          name: Wait for PostgresSQL to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Install Postgres CLI
          command: |
            sudo apt update
            sudo apt install -y postgresql-client-12
      - run:
          name: Run tests
          environment:
            SNIPPET_DB_URL: "postgres://user:passw0rd@postgres_db:5432/test_snippetbox?sslmode=disable&multiStatements=true"
          command: |
            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
            gotestsum --junitfile ${TEST_RESULTS}/unit-tests.xml -- $PACKAGE_NAMES
            go test ./... -coverprofile=c.out
            go tool cover -html=c.out -o coverage.html
            mv coverage.html ${TEST_RESULTS}
      - save_cache:
          key: go-mod-v1-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
          paths:
            - "./"
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts: 
          path: /tmp/test-results
          destination: raw-test-output
  sca_testing:
    docker: 
      - image: 'node:latest'
    steps:
      - checkout
      - sonarcloud/scan
  build_docker:
    docker:
      - image: cimg/go:1.17.1
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - compile_application
  heroku_deploy:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: Pushing to Heroku Registry
          command: |
            heroku container:login
            heroku container:push web -a $HEROKU_APP_NAME
            heroku container:release web -a $HEROKU_APP_NAME
  cypress_testing:
    machine:
      image: ubuntu-2004:202107-02
    steps:
      - checkout
      - compile_application
      - start_application
      - run: 
          name: Run Cypress tests
          command: |
            docker run --network=container:snippetbox -it -v $PWD:/e2e -w /e2e cypress/included:8.5.0
      - store_artifacts:
          path: ./cypress/videos
      - store_artifacts:
          path: ./cypress/screenshots
workflows:
  build-workflow:
    jobs:
      - go-lint
      - docker-lint
      - test:
          context:
            - snippetbox
          requires:
            - go-lint
            - docker-lint
      - sca_testing: 
          context: sonarcloud
          requires:
            - go-lint
            - docker-lint
          filters:
            branches:
              only: main
      - build_docker:
          requires:
            - test
            - cypress_testing
      - cypress_testing:
          requires:
            - go-lint
            - docker-lint
      - heroku_deploy:
          requires:
            - build_docker
          filters:
            branches:
              only: main
